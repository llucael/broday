{
  "info": {
    "name": "Broday Transportes - Testes CRUD",
    "description": "Testes específicos para operações CRUD (GET, POST, DELETE) com autenticação de diferentes tipos de usuário",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "clienteToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "motoristaToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "freteId",
      "value": "",
      "type": "string"
    },
    {
      "key": "clienteId",
      "value": "",
      "type": "string"
    },
    {
      "key": "motoristaId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Autenticação - Login de Usuários",
      "item": [
        {
          "name": "Login Cliente",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente@broday.com\",\n  \"password\": \"cliente123\",\n  \"userType\": \"cliente\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login Cliente - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Login Cliente - Token salvo', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.success && jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('clienteToken', jsonData.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('clienteId', jsonData.data.user.id);",
                  "        pm.expect(jsonData.data.tokens.accessToken).to.not.be.empty;",
                  "        console.log('Token salvo:', jsonData.data.tokens.accessToken);",
                  "    } else {",
                  "        console.log('Erro ao obter token:', jsonData);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Motorista",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"motorista@broday.com\",\n  \"password\": \"motorista123\",\n  \"userType\": \"motorista\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login Motorista - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Login Motorista - Token salvo', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.success && jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('motoristaToken', jsonData.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('motoristaId', jsonData.data.user.id);",
                  "        pm.expect(jsonData.data.tokens.accessToken).to.not.be.empty;",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@broday.com\",\n  \"password\": \"admin123\",\n  \"userType\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login Admin - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Login Admin - Token salvo', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.success && jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('adminToken', jsonData.data.tokens.accessToken);",
                  "        pm.expect(jsonData.data.tokens.accessToken).to.not.be.empty;",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. Operações GET - Consultas",
      "item": [
        {
          "name": "GET - Health Check (Público)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health Check - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health Check - Resposta válida', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.include('funcionando');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Perfil Cliente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Perfil Cliente - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Perfil Cliente - Dados corretos', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.userType).to.eql('cliente');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Perfil Motorista",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{motoristaToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Perfil Motorista - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Perfil Motorista - Dados corretos', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.userType).to.eql('motorista');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Perfil Admin",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Perfil Admin - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Perfil Admin - Dados corretos', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.userType).to.eql('admin');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Fretes do Cliente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/cliente/meus-fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "cliente", "meus-fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Fretes Cliente - Status 200', function () {",
                  "    console.log('Token usado:', pm.collectionVariables.get('clienteToken'));",
                  "    console.log('Status da resposta:', pm.response.status);",
                  "    if (pm.response.status !== 200) {",
                  "        console.log('Resposta de erro:', pm.response.text());",
                  "    }",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Fretes Cliente - Lista retornada', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('fretes');",
                  "    pm.expect(jsonData.data.fretes).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Fretes Disponíveis (Motorista)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{motoristaToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/disponiveis",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "disponiveis"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Fretes Disponíveis - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Fretes Disponíveis - Lista retornada', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('fretes');",
                  "    pm.expect(jsonData.data.fretes).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Fretes do Motorista",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{motoristaToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/motorista/meus-fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "motorista", "meus-fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Fretes Motorista - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Fretes Motorista - Lista retornada', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('fretes');",
                  "    pm.expect(jsonData.data.fretes).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Todos os Fretes (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Todos Fretes Admin - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Todos Fretes Admin - Lista retornada', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('fretes');",
                  "    pm.expect(jsonData.data.fretes).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET - Frete por ID (Cliente)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/{{freteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "{{freteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Frete por ID - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Frete por ID - Dados retornados', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('codigo');",
                  "    pm.expect(jsonData.data).to.have.property('status');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. Operações POST - Criação",
      "item": [
        {
          "name": "POST - Criar Frete (Cliente)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sender_name\": \"João Silva\",\n  \"sender_document\": \"123.456.789-00\",\n  \"sender_phone\": \"(11) 99999-9999\",\n  \"sender_email\": \"joao@email.com\",\n  \"recipient_name\": \"Maria Santos\",\n  \"recipient_document\": \"987.654.321-00\",\n  \"recipient_phone\": \"(11) 88888-8888\",\n  \"recipient_email\": \"maria@email.com\",\n  \"cargo_type\": \"Eletrônicos\",\n  \"cargo_value\": 2500.00,\n  \"cargo_weight\": 1500.00,\n  \"cargo_dimensions\": \"2.5x1.5x1.0\",\n  \"origin_cep\": \"01310-100\",\n  \"origin_street\": \"Av. Paulista\",\n  \"origin_number\": \"1000\",\n  \"origin_complement\": \"Apto 100\",\n  \"origin_city\": \"São Paulo\",\n  \"origin_state\": \"SP\",\n  \"destination_cep\": \"01302-000\",\n  \"destination_street\": \"Rua da Consolação\",\n  \"destination_number\": \"2000\",\n  \"destination_complement\": \"Sala 200\",\n  \"destination_city\": \"São Paulo\",\n  \"destination_state\": \"SP\",\n  \"observacoes\": \"Carga frágil - teste POST\",\n  \"data_coleta\": \"2024-12-20T10:00:00Z\",\n  \"data_entrega\": \"2024-12-21T18:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Criar Frete - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Criar Frete - Frete criado', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('codigo');",
                  "    pm.expect(jsonData.data.status).to.eql('solicitado');",
                  "    ",
                  "    // Salvar ID do frete para testes posteriores",
                  "    pm.collectionVariables.set('freteId', jsonData.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "POST - Aceitar Frete (Motorista)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{motoristaToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/fretes/{{freteId}}/aceitar",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "{{freteId}}", "aceitar"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Aceitar Frete - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Aceitar Frete - Status atualizado', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.status).to.eql('aceito');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "POST - Atualizar Status (Motorista)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{motoristaToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"em_transito\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/fretes/{{freteId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "{{freteId}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Atualizar Status - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Atualizar Status - Status alterado', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.status).to.eql('em_transito');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "POST - Registrar Novo Cliente",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"novo.cliente@broday.com\",\n  \"password\": \"novo123\",\n  \"userType\": \"cliente\",\n  \"nome\": \"Novo Cliente Teste\",\n  \"telefone\": \"(11) 88888-8888\",\n  \"tipoPessoa\": \"fisica\",\n  \"documento\": \"987.654.321-00\",\n  \"endereco\": \"Rua Nova, 456\",\n  \"cidade\": \"São Paulo\",\n  \"estado\": \"SP\",\n  \"cep\": \"04567-890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registrar Cliente - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Registrar Cliente - Usuário criado', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('tokens');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. Operações DELETE - Exclusão",
      "item": [
        {
          "name": "DELETE - Cancelar Frete (Cliente)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/{{freteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "{{freteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Cancelar Frete - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Cancelar Frete - Frete cancelado', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.include('cancelado');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "DELETE - Deletar Usuário (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/usuarios/{{clienteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "usuarios", "{{clienteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Deletar Usuário - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Deletar Usuário - Usuário removido', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.include('removido');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "DELETE - Deletar Frete (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/fretes/{{freteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "fretes", "{{freteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Deletar Frete Admin - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Deletar Frete Admin - Frete removido', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.message).to.include('removido');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. Testes de Validação e Erros",
      "item": [
        {
          "name": "GET - Acesso Negado (Sem Token)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/fretes/meus-fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "meus-fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Acesso Negado - Status 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Acesso Negado - Mensagem de erro', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.false;",
                  "    pm.expect(jsonData.message).to.include('token');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "POST - Dados Inválidos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sender_name\": \"\",\n  \"cargo_type\": \"\",\n  \"cargo_weight\": -100,\n  \"cargo_value\": -200\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Dados Inválidos - Status 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Dados Inválidos - Erro de validação', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.false;",
                  "    pm.expect(jsonData).to.have.property('errors');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "DELETE - Recurso Não Encontrado",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/99999",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "99999"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Recurso Não Encontrado - Status 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Recurso Não Encontrado - Mensagem de erro', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.false;",
                  "    pm.expect(jsonData.message).to.include('não encontrado');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
