{
  "info": {
    "name": "Broday Transportes - CRUD Simplificado",
    "description": "Testes CRUD simplificados com execu√ß√£o sequencial garantida",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "clienteToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "freteId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Login Cliente",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"cliente@broday.com\",\n  \"password\": \"cliente123\",\n  \"userType\": \"cliente\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Login - Status 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Login - Token salvo', function () {",
              "    const jsonData = pm.response.json();",
              "    if (jsonData.success && jsonData.data.tokens) {",
              "        pm.collectionVariables.set('clienteToken', jsonData.data.tokens.accessToken);",
              "        pm.expect(jsonData.data.tokens.accessToken).to.not.be.empty;",
              "        console.log('‚úÖ Token salvo:', jsonData.data.tokens.accessToken);",
              "    } else {",
              "        console.log('‚ùå Erro ao obter token:', jsonData);",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "2. GET Fretes do Cliente",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{clienteToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/fretes/cliente/meus-fretes",
          "host": ["{{baseUrl}}"],
          "path": ["fretes", "cliente", "meus-fretes"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Fretes - Status 200', function () {",
              "    console.log('üîë Token usado:', pm.collectionVariables.get('clienteToken'));",
              "    console.log('üìä Status da resposta:', pm.response.status);",
              "    if (pm.response.status !== 200) {",
              "        console.log('‚ùå Resposta de erro:', pm.response.text());",
              "    }",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Fretes - Dados retornados', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data).to.have.property('fretes');",
              "    pm.expect(jsonData.data.fretes).to.be.an('array');",
              "    console.log('‚úÖ Fretes encontrados:', jsonData.data.fretes.length);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "3. POST Criar Frete",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{clienteToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"sender_name\": \"Jo√£o Silva Teste\",\n  \"sender_document\": \"123.456.789-00\",\n  \"sender_phone\": \"(11) 99999-9999\",\n  \"sender_email\": \"joao@email.com\",\n  \"recipient_name\": \"Maria Santos Teste\",\n  \"recipient_document\": \"987.654.321-00\",\n  \"recipient_phone\": \"(11) 88888-8888\",\n  \"recipient_email\": \"maria@email.com\",\n  \"cargo_type\": \"Eletr√¥nicos\",\n  \"cargo_value\": 2500.00,\n  \"cargo_weight\": 1500.00,\n  \"cargo_dimensions\": \"2.5x1.5x1.0\",\n  \"origin_cep\": \"01310-100\",\n  \"origin_street\": \"Av. Paulista\",\n  \"origin_number\": \"1000\",\n  \"origin_complement\": \"Apto 100\",\n  \"origin_city\": \"S√£o Paulo\",\n  \"origin_state\": \"SP\",\n  \"destination_cep\": \"01302-000\",\n  \"destination_street\": \"Rua da Consola√ß√£o\",\n  \"destination_number\": \"2000\",\n  \"destination_complement\": \"Sala 200\",\n  \"destination_city\": \"S√£o Paulo\",\n  \"destination_state\": \"SP\",\n  \"observacoes\": \"Carga fr√°gil - teste POST\",\n  \"data_coleta\": \"2024-12-20T10:00:00Z\",\n  \"data_entrega\": \"2024-12-21T18:00:00Z\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/fretes",
          "host": ["{{baseUrl}}"],
          "path": ["fretes"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Criar Frete - Status 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Criar Frete - Frete criado', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data).to.have.property('id');",
              "    pm.expect(jsonData.data).to.have.property('codigo');",
              "    pm.expect(jsonData.data.status).to.eql('solicitado');",
              "    ",
              "    // Salvar ID do frete para testes posteriores",
              "    pm.collectionVariables.set('freteId', jsonData.data.id);",
              "    console.log('‚úÖ Frete criado com ID:', jsonData.data.id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4. DELETE Cancelar Frete",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{clienteToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/fretes/{{freteId}}",
          "host": ["{{baseUrl}}"],
          "path": ["fretes", "{{freteId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Cancelar Frete - Status 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Cancelar Frete - Frete cancelado', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.message).to.include('cancelado');",
              "    console.log('‚úÖ Frete cancelado com sucesso');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}