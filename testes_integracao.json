{
  "name": "2. Testes de Integração",
  "item": [
    {
      "name": "Fluxo Completo de Autenticação",
      "item": [
        {
          "name": "Registro de Cliente",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente.teste@broday.com\",\n  \"password\": \"cliente123\",\n  \"userType\": \"cliente\",\n  \"nome\": \"Cliente Teste\",\n  \"telefone\": \"(11) 99999-9999\",\n  \"tipoPessoa\": \"fisica\",\n  \"documento\": \"123.456.789-00\",\n  \"endereco\": \"Rua Teste, 123\",\n  \"cidade\": \"São Paulo\",\n  \"estado\": \"SP\",\n  \"cep\": \"01234-567\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('User created successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('tokens');",
                  "    ",
                  "    // Salvar token para próximos testes",
                  "    pm.collectionVariables.set('clienteToken', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('clienteId', jsonData.data.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login do Cliente",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente.teste@broday.com\",\n  \"password\": \"cliente123\",\n  \"userType\": \"cliente\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Login successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('tokens');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Obter Perfil do Cliente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Profile data is correct', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('email', 'cliente.teste@broday.com');",
                  "    pm.expect(jsonData.data).to.have.property('userType', 'cliente');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Integração Frontend-Backend - Fretes",
      "item": [
        {
          "name": "Criar Frete (Cliente)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tipoCarga\": \"Eletrônicos\",\n  \"peso\": 1500.000,\n  \"volume\": 2.500,\n  \"valor\": 2500.00,\n  \"observacoes\": \"Carga frágil - teste de integração\",\n  \"origemEndereco\": \"Av. Paulista, 1000\",\n  \"origemCidade\": \"São Paulo\",\n  \"origemEstado\": \"SP\",\n  \"origemCep\": \"01310-100\",\n  \"destinoEndereco\": \"Rua da Consolação, 2000\",\n  \"destinoCidade\": \"São Paulo\",\n  \"destinoEstado\": \"SP\",\n  \"destinoCep\": \"01302-000\",\n  \"dataColeta\": \"2024-12-15T10:00:00Z\",\n  \"dataEntrega\": \"2024-12-16T18:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Frete created successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('codigo');",
                  "    pm.expect(jsonData.data).to.have.property('status', 'solicitado');",
                  "    ",
                  "    // Salvar ID do frete para próximos testes",
                  "    pm.collectionVariables.set('freteId', jsonData.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Listar Fretes do Cliente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/meus-fretes",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "meus-fretes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Fretes list returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('fretes');",
                  "    pm.expect(jsonData.data.fretes).to.be.an('array');",
                  "    pm.expect(jsonData.data.fretes.length).to.be.at.least(1);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Integração com Banco de Dados",
      "item": [
        {
          "name": "Verificar Consistência de Dados - Cliente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Database consistency check', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const user = jsonData.data;",
                  "    ",
                  "    // Verificar se dados estão consistentes",
                  "    pm.expect(user).to.have.property('id');",
                  "    pm.expect(user).to.have.property('email');",
                  "    pm.expect(user).to.have.property('userType');",
                  "    pm.expect(user).to.have.property('isActive');",
                  "    pm.expect(user.isActive).to.be.true;",
                  "    ",
                  "    // Verificar tipos de dados",
                  "    pm.expect(user.id).to.be.a('number');",
                  "    pm.expect(user.email).to.be.a('string');",
                  "    pm.expect(user.userType).to.be.a('string');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Verificar Relacionamentos - Frete-Cliente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clienteToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/fretes/{{freteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["fretes", "{{freteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Frete belongs to correct client', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const frete = jsonData.data;",
                  "    ",
                  "    pm.expect(frete).to.have.property('clienteId');",
                  "    pm.expect(frete.clienteId).to.eql(parseInt(pm.collectionVariables.get('clienteId')));",
                  "});",
                  "",
                  "pm.test('Frete has correct structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const frete = jsonData.data;",
                  "    ",
                  "    pm.expect(frete).to.have.property('id');",
                  "    pm.expect(frete).to.have.property('codigo');",
                  "    pm.expect(frete).to.have.property('status');",
                  "    pm.expect(frete).to.have.property('tipoCarga');",
                  "    pm.expect(frete).to.have.property('peso');",
                  "    pm.expect(frete).to.have.property('valor');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
